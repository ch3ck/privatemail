# Actions workflow to create bootstrap binary, provision infrastructure and release crates if necessary
# Author: Nyah Check
name: Deploy new email service

on:
  workflow_dispatch:
    inputs:
      reason:
        description: Reason for deployment
        required: true

  push:
    tags:
      - "*"

jobs:
  deploy-new-infra-with-terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
        with:
          rust-version: stable
      - name: Fetch musl-rust image
        run: docker pull clux/muslrust
      - name: Build rust release binary
        run: |
          rustup target add x86_64-unknown-linux-musl
          docker run -v $PWD:/volume --rm -t clux/muslrust cargo build --release --target x86_64-unknown-linux-musl
      - name: package lambda zip for terraform
        run: |
          zip -j lambda.zip ./target/x86_64-unknown-linux-musl/release/bootstrap
          cp lambda.zip terraform/
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        env:
          TF_VAR_from_email: ${{ secrets.TO_EMAIL }}
          TF_VAR_to_email: ${{ secrets.FROM_EMAIL }}
      - name: Terraform Format
        id: fmt
        run: terraform -chdir=terraform fmt -check
      - name: Terraform init
        id: init
        run: terraform -chdir=terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -json
      - name: Terraform Plan
        run: terraform -chdir=terraform plan
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform -chdir=terraform apply -auto-approve
