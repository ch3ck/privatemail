# Actions workflow to release new crates and binaries
# Author: Nyah Check
name: Release new binaries

on:
  workflow_dispatch:
    inputs:
      reason:
        description: Reason for deployment
        required: true

  push:
    tags:
      - "*"

permissions:
  contents: write


jobs:
  publish-crate-on-new-release:
    name: "Publish crate on Release"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
      - uses: katyo/publish-crates@v1
        with:
            registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  create-new-github-release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-musl]
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUSTTARGET: ${{ matrix.target }}
          EXTRA_FILES: "README.md CHANGELOG.md SECURITY.md LICENSE"

  release-new-musl-binary:
    name: build musl-rust bootstrap binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          rust-version: stable
      - name: Fetch musl-rust image
        run: docker pull clux/muslrust
      - name: Build rust release binary
        run: |
          rustup target add x86_64-unknown-linux-musl
          docker run -v $PWD:/volume --rm -t clux/muslrust cargo build --release --target x86_64-unknown-linux-musl
      - name: package lambda zip for release
        run: |
          zip -j lambda.zip ./target/x86_64-unknown-linux-musl/release/bootstrap
      - name: create-new-release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          generate_release_notes: true
          files: |
            CHANGELOG.md
            README.md
            SECURITY.md
            LICENSE
            lambda.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
